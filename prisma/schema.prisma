generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Material {
  id                 String          @id @default(cuid())
  type               String
  color              String
  colorCode          String
  brand              String
  defaultUnit        MeasurementUnit
  defaultCostPerUnit Float
  currency           String
  notes              String?
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt

  // Relations
  inventory  MaterialInventory[]
  movements  MaterialMovement[]
  orderItems MaterialOrderItem[]
  products   ProductMaterial[]
}

model MaterialInventory {
  id         String          @id @default(cuid())
  materialId String
  material   Material        @relation(fields: [materialId], references: [id])
  quantity   Float
  unit       MeasurementUnit
  location   String
  notes      String?
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model MaterialMovement {
  id         String          @id @default(cuid())
  materialId String
  material   Material        @relation(fields: [materialId], references: [id])
  quantity   Float
  unit       MeasurementUnit
  type       MovementType
  reference  String?
  notes      String?
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model Product {
  id        String            @id @default(cuid())
  sku       String            @unique
  piece     String
  name      String
  season    String
  phase     Phase
  materials ProductMaterial[]
  photos    String[]
  notes     String?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

model ProductMaterial {
  id         String          @id @default(cuid())
  product    Product         @relation(fields: [productId], references: [id])
  productId  String
  material   Material        @relation(fields: [materialId], references: [id])
  materialId String
  quantity   Float
  unit       MeasurementUnit
  notes      String?
}

enum Phase {
  SWATCH
  INITIAL_SAMPLE
  FIT_SAMPLE
  PRODUCTION_SAMPLE
  PRODUCTION
}

model MaterialOrder {
  id               String              @id @default(cuid())
  orderNumber      String              @unique
  supplier         String
  orderItems       MaterialOrderItem[]
  totalPrice       Float
  currency         String
  orderDate        DateTime
  expectedDelivery DateTime
  actualDelivery   DateTime?
  status           OrderStatus
  notes            String?
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
}

model MaterialOrderItem {
  id         String          @id @default(cuid())
  orderId    String
  order      MaterialOrder   @relation(fields: [orderId], references: [id])
  materialId String
  material   Material        @relation(fields: [materialId], references: [id])
  quantity   Float
  unit       MeasurementUnit
  unitPrice  Float
  totalPrice Float
  notes      String?
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model Contact {
  id        String      @id @default(cuid())
  name      String
  email     String      @unique
  phone     String?
  company   String?
  role      String?
  type      ContactType
  notes     String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum Role {
  ADMIN
  USER
  PRODUCTION_MANAGER
  INVENTORY_MANAGER
}

enum MeasurementUnit {
  GRAM
  KILOGRAM
  METER
  YARD
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}

enum MovementType {
  RECEIVED
  CONSUMED
  ADJUSTED
  RETURNED
  SCRAPPED
}

enum ContactType {
  SUPPLIER
  MANUFACTURER
  CUSTOMER
  OTHER
}
